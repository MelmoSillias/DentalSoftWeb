{% extends 'appbase.html.twig' %}

{% block title %}Gestion des Employ√©s{% endblock %}

{% block stylesheets %}
    <link href="{{ asset('css/filepond.min.css') }}" rel="stylesheet">

<style>
    .btn-check:checked + .btn-outline-primary {
        background-color: #0d6efd;
        color: #fff;
        border-color: #0d6efd;
    }
    input.btn-check {
    position: absolute !important;
    left: -9999px !important;
    opacity: 0 !important;
}
</style>

{% endblock %}

{% block main %}
<div class="container-fluid px-4">
    <h1 class="mt-4 text-center mb-4">Gestion des Employ√©s</h1>

    <ol class="breadcrumb mb-4 d-flex flex-wrap">
        <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
        <li class="breadcrumb-item active">Employ√©s</li>
    </ol>

    <div class="card shadow mb-4">
        <div class="card-header py-2">
            <div class="d-flex flex-wrap gap-2">
                <button class="btn btn-primary" id="mainFab">
                    <i class="fas fa-plus"></i> Ajouter un Employ√©
                </button>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="employeeTable" class="table table-bordered table-striped table-hover my-4" width="100%" cellspacing="0">
                    <thead class="table-light">
                        <tr>
                            <th>Nom</th>
                            <th>Pr√©nom</th>
                            <th>Type</th>
                            <th>T√©l√©phone</th>
                            <th>Date Embauche</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Rows will be dynamically generated by DataTables -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Employee Modal -->
<div class="modal fade" action="#" id="addEmployeeModal" tabindex="-1" aria-labelledby="addEmployeeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addEmployeeModalLabel">Ajouter un Employ√©</h5>
                <button type="button" class="btn-close" ></button>
            </div>
           <form id="employeeForm" method="post" class="mx-4">

    <!-- üîπ Informations personnelles -->
    <h5 class="mb-3 mt-4">Informations personnelles</h5>
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Nom</label>
            <input type="text" class="form-control" name="nom" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Pr√©nom</label>
            <input type="text" class="form-control" name="prenom" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">T√©l√©phone</label>
            <input type="tel" class="form-control" name="telephone">
        </div>
        <div class="col-md-6">
            <label class="form-label">Email</label>
            <input type="email" class="form-control" name="email" required>
        </div> 
    </div>

    <!-- üîπ Informations professionnelles -->
    <h5 class="mb-3 mt-5">Informations professionnelles</h5>
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Fonction</label>
            <input type="text" class="form-control" name="fonction" required>
        </div>
        <div class="col-md-6">
            <label class="form-label">Type</label>
            <select class="form-select form-control form-user-control" name="type" id="employeeType" required>
                <option value="Medecin">M√©decin</option>
                <option value="GRH">GRH</option>
                <option value="Receptionniste">R√©ceptionniste</option>
                <option value="Admin">Admin</option>
                <option value="Autre">Autre</option>
            </select>
        </div> 
        <div class="col-md-6">
            <label class="form-label">Date Embauche</label>
            <input type="date" class="form-control" name="dateEmbauche" required>
        </div>
    </div>

    <!-- üîπ Contrat -->
    <h5 class="mb-3 mt-5">Contrat</h5>
    <div class="row g-3">
        <div class="col-md-6">
            <label class="form-label">Type de Contrat</label>
            <select class="form-select form-control form-user-control" name="typeContrat" required>
                <option value="CDI">CDI</option>
                <option value="CDD">CDD</option>
                <option value="Stage">Stage</option>
                <option value="Freelance">Freelance</option>
            </select>
        </div>
        <div class="col-md-6">
            <label class="form-label">Dur√©e du Contrat (en mois)</label>
            <input type="number" class="form-control" name="dureeContrat" min="1">
        </div>
        <div class="col-md-6">
    <label class="form-label">Type de Salaire</label>
    <select class="form-select form-user-control form-control" name="typeSalaire" id="typeSalaire">
        <option value="fixe">Fixe</option>
        <option value="pourcentage">Pourcentage</option>
    </select>
    <input type="hidden" name="type" id="typeHidden">

</div>

<div class="col-md-6">
    <label class="form-label">Valeur du Salaire</label>
    <input type="number" step="0.01" class="form-control" name="valeurSalaire" id="valeurSalaire" required>
</div>

    </div>

<div class="col-md-12">
        <label class="form-label">Jours travaill√©s</label>
        <div class="btn-group w-100 flex-wrap" role="group">
            {% for day in ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'] %}
                <input type="checkbox" class="btn-check" id="btn-{{ day }}" name="comingDays[]" value="{{ day }}">
                <label class="btn btn-outline-primary" for="btn-{{ day }}">{{ day }}</label>
            {% endfor %}
        </div>
    </div>

    <!-- üîπ Fichiers & Disponibilit√©s -->
    <h5 class="mb-3 mt-5">Fichiers Administratifs</h5>
    <div class="row g-3">
        <div class="col-md-12">
            <label for="administrativeFiles" class="form-label">Fichiers Administratifs</label>
            <input 
                type="file" 
                id="administrativeFiles" 
                name="administrativeFiles[]" 
                multiple 
                class="filepond"
            />
        </div>
    </div>

    <!-- Boutons -->
    <div class="modal-footer mt-4">
        <button type="button" class="btn btn-secondary btn-close" data-bs-dismiss="modal">Fermer</button>
        <button type="submit" class="btn btn-primary">Enregistrer</button>
    </div>
</form>

        </div>
    </div>
</div>

<div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1100;">
  <div id="employeeToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body" id="employeeToastBody">
        Employ√© cr√©√© avec succ√®s.
      </div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Fermer"></button>
    </div>
  </div>
</div>

{% endblock %}

{% block javascripts %}   
    <script src="{{ asset('js/filepond.min.js') }}"></script> 
    <script src="{{ asset('js/filepond-plugin-file-validate-type.min.js') }}"></script>
    <script src="{{ asset('js/filepond-plugin-file-validate-size.min.js') }}"></script>

    <script>

        $('.btn-close').on('click', function () {
            const modal = $(this).closest('.modal');
            if (modal.length) {
            modal.modal('hide');
            }
        });
           
        let pondInstance;

      FilePond.registerPlugin(
            FilePondPluginFileValidateType,
            FilePondPluginFileValidateSize
        );

      pondInstance = FilePond.create(document.querySelector('input.filepond'), {
            allowMultiple: true,
            storeAsFile: true,
            maxFileSize: '5MB',
            acceptedFileTypes: ['application/pdf', 'image/*'],
            labelIdle: `Glissez‚Äëd√©posez vos fichiers ou <span class="filepond--label-action">Parcourir</span>`,
           server: {
        process: (fieldName, file, metadata, load, error, progress, abort) => {
          // Simulation d'upload avec progression
          const total = file.size;
          let loaded = 0;
          const speed = total / 20; // 20 √©tapes de progression
          const timer = setInterval(() => {
            loaded = Math.min(loaded + speed, total);
            // Mettre √† jour la progression
            progress(true, loaded, total);
            if (loaded >= total) {
              clearInterval(timer);
              // Appel load quand termin√© (fournit un identifiant de fichier)
              load(Date.now().toString());
            }
          }, 100);

          // Fonction abort
          return {
            abort: () => {
              clearInterval(timer);
              abort();
            }
          };
        }
      },
            // üî• D√©sactiver toutes les previews
            allowFilePoster: false,
            allowImagePreview:false
        });

      
    </script>

    <script>
document.addEventListener('DOMContentLoaded', function () {
    const typeSelect = document.getElementById('employeeType');
    const typeSalaire = document.getElementById('typeSalaire');
    const usernameField = document.getElementById('usernameField');
    const valeurSalaire = document.getElementById('valeurSalaire');

    function updateFormConstraints() {
        const selectedType = typeSelect.value;

        // R√®gle 1 : Si ce n'est pas un m√©decin ‚Üí Salaire fixe obligatoire
        if (selectedType !== 'Medecin') {
            typeSalaire.value = 'fixe';
            typeSalaire.disabled = true;
        } else {
            typeSalaire.disabled = false;
        }

        // R√®gle 2 : Username visible uniquement pour les types autoris√©s
    
    }

    // R√©agir au changement de type
    typeSelect.addEventListener('change', updateFormConstraints);

    // Initialiser d√®s le chargement
    updateFormConstraints();
});
    </script>

    <script src="{{ asset('js/employees.js') }}"></script>

{% endblock %}
