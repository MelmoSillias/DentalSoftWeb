{% extends 'appbase.html.twig' %}

{% block title %}D√©tails de l'Employ√©{% endblock %}

{% block main %}
<div class="container-fluid px-4">
    <div class="align-items-center flex-wrap mt-4 mb-3">
        <h1 class="h3 mb-2 text-gray-800">Details Employ√©e</h1>
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><i class="fas fa-home me-1"></i></li>
            <li class="breadcrumb-item">Administration</li>
            <li class="breadcrumb-item">Gestion RH</li>
            <li class="breadcrumb-item active">Details Employ√©e</li>
        </ol>
    </div>
   <form id="employeeDetailsForm" >

        <!-- === Informations personnelles === -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-id-card me-1"></i>Informations personnelles de l'employ√©
                </h6>
            </div>
            <div class="card-body">
                <div class="row gx-4">
                    <div class="col-md-6">
                      {% for label, field in {
                        'Nom': 'nom',
                        'Pr√©nom': 'prenom',
                        'Matricule': 'matricule',
                        'Fonction': 'fonction'
                      } %}
                        <div class="mb-3 row">
                          <label class="col-sm-4 col-form-label">{{ label }}</label>
                          <div class="col-sm-8">
                            {% if field == 'matricule' %}
                              <input type="text" name="{{ field }}" class="form-control" value="{{ attribute(employee, field) }}" readonly>
                            {% else %}
                              <input type="text" name="{{ field }}" class="form-control" value="{{ attribute(employee, field) }}">
                            {% endif %}
                          </div>
                        </div>
                      {% endfor %}
                       
                        <div class="mb-3 row">
                            <label class="col-sm-4 col-form-label">Type</label>
                            <div class="col-sm-8">
                                <select id="typeSelect" class="form-select form-control" disabled>
                                    {% for t in ['Medecin','GRH','Receptionniste','Admin','Autre'] %}
                                        <option value="{{ t }}" {{ employee.type == t ? 'selected' }}>{{ t }}</option>
                                    {% endfor %}
                                </select>
                                <input type="hidden" name="type" id="typeHidden" value="{{ employee.type }}">
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3 row">
                            <label class="col-sm-4 col-form-label">T√©l√©phone</label>
                            <div class="col-sm-8">
                                <input type="tel" name="telephone" class="form-control" value="{{ employee.telephone }}">
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-sm-4 col-form-label">Email</label>
                            <div class="col-sm-8">
                                <input type="email" name="email" class="form-control" value="{{ employee.email }}">
                            </div>
                        </div>
                        <div class="mb-3 row">
                            <label class="col-sm-4 col-form-label">Date d'embauche</label>
                            <div class="col-sm-8">
                                <input type="date" name="dateEmbauche" class="form-control" value="{{ employee.dateEmbauche|date('Y-m-d') }}" readonly>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- === Informations RH === -->
        <div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-briefcase me-1"></i>Informations RH
        </h6>
    </div>
    <div class="card-body">
        <div class="row gx-5">
            {# ‚Äî Ligne 1, deux colonnes ‚Äî #}
            <div class="col-md-6 mb-3 row">
                <label class="col-sm-5 col-form-label">Type de Salaire</label>
                <div class="col-sm-7">
                    <select name="typeSalaire" class="form-select form-control">
                        <option value="fixe" {{ employee.typeSalaire == 'fixe' ? 'selected' }}>Fixe</option>
                        <option value="pourcentage" {{ employee.typeSalaire == 'pourcentage' ? 'selected' }}>Pourcentage</option>
                    </select>
                </div>
            </div>
            <div class="col-md-6 mb-3 row">
                <label class="col-sm-5 col-form-label">Valeur du Salaire (‚Ç¨)</label>
                <div class="col-sm-7">
                    <input type="number" step="0.01" name="valeurSalaire" class="form-control" value="{{ employee.valeurSalaire }}">
                </div>
            </div>

            {# ‚Äî Ligne 2, deux colonnes ‚Äî #}
            <div class="col-md-6 mb-3 row">
                <label class="col-sm-5 col-form-label">Type de Contrat</label>
                <div class="col-sm-7">
                    <input type="text" name="typeContrat" class="form-control" value="{{ employee.typeContrat }}">
                </div>
            </div>
            <div class="col-md-6 mb-3 row">
                <label class="col-sm-5 col-form-label">Dur√©e de contrat (mois)</label>
                <div class="col-sm-7">
                    <input type="number" name="dureeContrat" class="form-control" value="{{ employee.dureeContrat }}">
                </div>
            </div>

            {# ‚Äî Derni√®re ligne, pleine largeur ‚Äî #}
            <div class="col-12">
                <label class="form-label">Jours travaill√©s</label>
                <div class="btn-group w-100 flex-wrap" role="group">
                    {% for day in ['Lundi','Mardi','Mercredi','Jeudi','Vendredi','Samedi','Dimanche'] %}
                        <input
                          type="checkbox"
                          class="btn-check"
                          id="day_{{ day }}"
                          name="comingDays[]"
                          value="{{ day }}"
                          {{ day in employee.comingDaysInWeek ? 'checked' }}>
                        <label class="btn btn-outline-primary btn-sm" for="day_{{ day }}">
                            {{ day|slice(0,3)|capitalize }}
                        </label>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</div>


        <!-- === Documents administratifs === -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-file-alt me-1"></i>Documents administratifs
                </h6>
            </div>
            <div class="card-body">
                <label for="administrativeFiles" class="form-label">Fichiers Administratifs</label>
                <input 
    type="file" 
    id="administrativeFiles" 
    name="administrativeFiles[]" 
    multiple 
    class="filepond" 
/>
<div class="mt-3">
                    {% for file in employee.administrativeFiles %}
                        {% set fileName = file|split('/')|last %}
                        <a href="{{ file }}" target="_blank" download class="btn btn-outline-secondary btn-sm existing-file-download">
                            <i class="fas fa-download me-1"></i>{{ fileName }}
                        </a>
                    {% endfor %}
                </div>

            </div>
        </div>

        <!-- === Bouton sauvegarde flottant === -->
        <div class="floating-save-btn">
            <button type="submit" class="btn btn-primary btn-lg rounded-circle shadow">
                <i class="fas fa-save"></i>
            </button>
        </div>
    </form>

    <!-- === Cong√©s regroup√©s par ann√©e === -->
<div class="card shadow mt-5 mb-4">
  <div class="card-header py-3 d-flex justify-content-between align-items-center">
    <h6 class="m-0 font-weight-bold text-primary">
      <i class="fas fa-calendar-alt me-1"></i>Cong√©s de l'employ√© (par ann√©e)
    </h6>
  </div>
  <div class="card-body">

    {% if employee.conges is not empty %}
      {% set congesParAnnee = {} %}
{% for conge in employee.conges %}
    {% set annee = conge.startDate|date('Y') %}
    {% if congesParAnnee[annee] is not defined %}
        {% set congesParAnnee = congesParAnnee|merge({ (annee): [conge] }) %}
    {% else %}
        {% set congesParAnnee = congesParAnnee|merge({
            (annee): congesParAnnee[annee]|merge([conge])
        }) %}
    {% endif %}
{% endfor %}

      {% for annee, conges in congesParAnnee|sort|reverse %}
        {% set totalJours = conges|map(c => c.startDate.diff(c.endDate).days + 1)|reduce((carry, days) => carry + days) %}

        <h5 class="mt-4 mb-3">
          üóìÔ∏è {{ annee }} ‚Äî <span class="text-muted">{{ totalJours }} jour{{ totalJours > 1 ? 's' : '' }} de cong√©</span>
        </h5>

        <div class="row g-3">
          {% for conge in conges|sort((a, b) => b.startDate <=> a.startDate) %}
            {% set congeClass = {
              'vacances': 'bg-success text-white',
              'teletravail': 'bg-info text-white',
              'arret': 'bg-danger text-white',
              'deplacement': 'bg-warning text-dark'
            }[conge.type|lower] ?? 'bg-secondary text-white' %}

            <div class="col-md-6 col-lg-4">
              <div class="card {{ congeClass }} shadow-sm h-100">
                <div class="card-body">
                  <h6 class="card-title text-capitalize mb-2">
                    <i class="fas fa-suitcase-rolling me-1"></i>{{ conge.type }}
                  </h6>
                  <p class="mb-1 small">
                    üìÖ Du {{ conge.startDate|date('d/m/Y') }} au {{ conge.endDate|date('d/m/Y') }}
                  </p>
                  <p class="mb-0 small">
                    üïê Dur√©e : {{ conge.startDate.diff(conge.endDate).days + 1 }} jour{{ conge.startDate.diff(conge.endDate).days > 0 ? 's' : '' }}
                  </p>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      {% endfor %}
    {% else %}
      <div class="text-muted">Aucun cong√© enregistr√© pour cet employ√©.</div>
    {% endif %}

  </div>
</div>

</div>


{% endblock %}

{% block stylesheets %} 

    
    <style>
        .floating-save-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
        }
         .btn-check:checked + .btn-outline-primary {
        background-color: #0d6efd;
        color: #fff;
        border-color: #0d6efd;
    }
    input.btn-check {
    position: absolute !important;
    left: -9999px !important;
    opacity: 0 !important;
}



    </style>
    <link href="{{ asset('css/filepond.min.css') }}" rel="stylesheet"> 
{% endblock %}
{% block javascripts %} 
    {{ parent() }}
    <script src="{{ asset('js/filepond.min.js') }}"></script> 
    <script src="{{ asset('js/filepond-plugin-file-validate-type.min.js') }}"></script>
    <script src="{{ asset('js/filepond-plugin-file-validate-size.min.js') }}"></script>

   <script>
$(document).ready(function () {
    let pondInstance;

    const existingFiles = {{ employee.administrativeFiles|json_encode|raw }};

    // Synchroniser le champ <select disabled> avec l'input hidden
    $('#typeHidden').val($('#typeSelect').val());

    FilePond.registerPlugin(
        FilePondPluginFileValidateType,
        FilePondPluginFileValidateSize
    );

    pondInstance = FilePond.create(document.querySelector('#administrativeFiles'), {
        allowMultiple: true,
        storeAsFile: true,
        maxFileSize: '5MB',
        acceptedFileTypes: ['application/pdf', 'image/*'],
        labelIdle: `Glissez‚Äëd√©posez vos fichiers ou <span class="filepond--label-action">Parcourir</span>`,
        server: {
            process: (fieldName, file, metadata, load, error, progress, abort) => {
                const total = file.size;
                let loaded = 0;
                const speed = total / 20;
                const timer = setInterval(() => {
                    loaded = Math.min(loaded + speed, total);
                    progress(true, loaded, total);
                    if (loaded >= total) {
                        clearInterval(timer);
                        load(Date.now().toString());
                    }
                }, 100);
                return { abort: () => { clearInterval(timer); abort(); } };
            }
        },
        allowFilePoster: true,
        allowImagePreview: true
    });

    existingFiles.forEach(fileUrl => {
        const fileName = fileUrl.split('/').pop();
        const ext = fileName.split('.').pop().toLowerCase();
        let fileType = 'application/octet-stream';
        if (ext === 'pdf') fileType = 'application/pdf';
        else if (['jpg','jpeg','png','gif'].includes(ext)) fileType = 'image/' + ext;

        pondInstance.addFile(window.location.origin + fileUrl, {
            type: 'local',
            file: { name: fileName, type: fileType }
        }).catch(err => {
            console.error("‚ùå Erreur affichage fichier :", fileUrl, err);
            showToastModal({ message: "Impossible d'afficher un fichier existant", type: "warning" });
        });
    });

    // ===== FORMULAIRE DE MISE √Ä JOUR =====
    $('#employeeDetailsForm').on('submit', function (e) {
        e.preventDefault();
        $('#typeHidden').val($('#typeSelect').val());

        const formData = new FormData();
        $(this).serializeArray().forEach(({ name, value }) => {
            if (!name.startsWith('comingDays')) formData.append(name, value);
        });

        $('input[name="comingDays[]"]:checked').each(function () {
            formData.append('comingDays[]', $(this).val());
        });
        
        pondInstance.getFiles().forEach(fileItem => {
            formData.append('administrativeFiles[]', fileItem.file);
        });

        const employeeId = {{ employee.id }};
        $.ajax({
            url: `/api/employee/update/${employeeId}`,
            method: 'POST',
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                showToastModal({
                    message: response.message || 'Employ√© mis √† jour avec succ√®s',
                    type: 'success'
                });
            },
            error: function (xhr) {
                const message = xhr.responseText || 'Erreur inconnue';
                showToastModal({
                    message: 'Erreur : ' + message,
                    type: 'error',
                    duration: 3000
                });
            }
        });
    });
});
</script>

{% endblock %}
