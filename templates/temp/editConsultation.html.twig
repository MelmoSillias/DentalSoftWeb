{% extends 'appbase.html.twig' %}

{% block title %}Compléter Consultation - {{ consultation.patient.nom }}{% endblock %}

{% block stylesheets %}
  {{ parent() }}

  {# --- FilePond CSS (thème clair) --- #}
  <link href="https://unpkg.com/filepond/dist/filepond.min.css" rel="stylesheet"/>

  <style>
    /* --- Layout global --- */
    .container-fluid { padding: 1rem; }
    .card { margin-bottom: 1.5rem; }

    /* --- Floating Action Buttons --- */
    .floating-buttons {
      position: fixed;
      bottom: 20px; right: 20px;
      display: flex; flex-direction: column; gap: 0.5rem;
      z-index: 1000;
    }
    .btn-circle {
      width: 56px; height: 56px; border-radius: 50%;
      display: flex; align-items: center; justify-content: center;
      font-size: 1.25rem; padding: 0;
    }
    @media (max-width: 767.98px) {
      .floating-buttons { bottom: 15px; right: 15px; }
      .btn-circle { width: 45px; height: 45px; }
    }
    @media (max-width: 575.98px) {
      .floating-buttons { bottom: 10px; right: 10px; }
      .btn-circle { width: 40px; height: 40px; }
    }

    /* --- Modals Responsives --- */
    @media (max-width: 991.98px) {
      .modal-xl { max-width: 100% !important; margin: 1rem; }
    }
    @media (max-width: 575.98px) {
      .modal-dialog { max-width: 100% !important; margin: 0.5rem; }
    }

    /* --- Form Controls SB Admin 2 --- */
    #consultForm input,
    #consultForm select,
    #consultForm textarea {
      width: 100%; padding: 0.75rem 1rem; font-size: 1rem;
      line-height: 1.5; color: #3a3b45; background-color: #f8f9fc;
      border: 1px solid #d1d3e2; border-radius: 0.35rem;
      transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
    }


    #consultForm input:focus,
    #consultForm select:focus,
    #consultForm textarea:focus {
      background-color: #fff; border-color: #4e73df;
      box-shadow: 0 0 0 .2rem rgba(78,115,223,.25); outline: 0;
    }

    /* --- Tables Responsive --- */
    .table-responsive { overflow-x: auto; -webkit-overflow-scrolling: touch; }

    /* --- Facture Styles --- */
    .facture-container { font-family: 'Nunito', sans-serif; color: #333; }
    .facture-header {
      display: flex; justify-content: space-between; align-items: center;
      border-bottom: 2px solid #007bff; padding-bottom: 1rem; margin-bottom: 1rem;
    }
    .facture-logo { max-width: 100px; }
    .entreprise-info { text-align: right; }
    .client-info { margin-bottom: 1.5rem; }
    .facture-meta { text-align: right; }
    .facture-table {
      width: 100%; border-collapse: collapse; margin-bottom: 1.5rem;
    }
    .facture-table th,
    .facture-table td {
      border: 1px solid #ddd; padding: 0.75rem; text-align: left;
    }
    .facture-table th { background-color: #f8f9fc; font-weight: bold; }
    .facture-table tfoot th { text-align: right; }
    .signature-section {
      display: flex; justify-content: space-between; align-items: center; margin-top: 2rem;
    }
    .montant-lettres { font-style: italic; }
    .cachet-space {
      width: 150px; height: 100px; border: 1px dashed #ccc;
      text-align: center; line-height: 100px; color: #999;
    }
    .facture-footer {
      text-align: center; font-size: 0.875rem; color: #666; margin-top: 2rem;
    }

    /* --- Last Consultation Card --- */
    .last-consult-card {
      position: fixed; top: 5.5rem; right: 1rem;
      width: 20rem; z-index: 1100; opacity: .5;
      transition: top .3s ease-in-out, opacity .3s ease;
    }
    .last-consult-card:hover { opacity: 1; }
    .last-consult-card .card {
      border-left: .25rem solid #4e73df;
      box-shadow: 0 .15rem 1.75rem rgba(58,59,69,.15);
    }

    /* 1) Form-control SB Admin 2 – exclure file & toggles */
#consultForm input:not([type="file"]):not(.form-check-input),
#consultForm select,
#consultForm textarea {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  line-height: 1.5;
  color: #3a3b45;
  background-color: #f8f9fc;
  border: 1px solid #d1d3e2;
  border-radius: 0.35rem;
  transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out;
}
#consultForm input:not([type="file"]):not(.form-check-input):focus,
#consultForm select:focus,
#consultForm textarea:focus {
  background-color: #fff;
  border-color: #4e73df;
  box-shadow: 0 0 0 .2rem rgba(78,115,223,.25);
  outline: 0;
}

  </style>
{% endblock %}

{% block main %}
<div class="container-fluid px-4">
  {% if derniereConsultation %}
    <div class="last-consult-card card shadow mb-4">
      <div class="card-header d-flex align-items-center py-3">
        <h6 class="m-0 font-weight-bold text-primary">Dernière consultation</h6>
        <div class="ms-auto d-flex align-items-center mx-4">
         <div class="custom-control custom-switch custom-switch-sm me-2 mb-0">
            <input type="checkbox"
                   class="custom-control-input"
                   id="linkLast">
            <label class="custom-control-label"
                   for="linkLast">Lier</label>
          </div>
          <button class="btn btn-sm btn-link p-0 ms-2"
                  data-bs-toggle="collapse" data-bs-target="#lastConsultDetails"
                  aria-expanded="false" aria-controls="lastConsultDetails">
            <i class="fas fa-chevron-down"></i>
          </button>
        </div>
      </div>
      <div id="lastConsultDetails" class="collapse">
        <div class="card-body">
          <p class="mb-1"><strong>Date :</strong> <span id="lastDate">{{ derniereConsultation.dateDebut|date('Y-m-d H:i') }}</span></p>
          <p class="mb-1"><strong>Motif :</strong> <span id="lastMotif">{{ derniereConsultation.motifConsultation }}</span></p>
          <p class="mb-0"><strong>Diagnostic :</strong> <span id="lastDiagnostic">{{ derniereConsultation.diagnostic }}</span></p>
        </div>
      </div>
    </div>
    <script>
      window.LAST_CONSULTATION_ID = {{ derniereConsultation.id }};
      window.IS_LINKED = {{ consultation.consultationLiee ? 'true' : 'false' }};
      window.CONSULTATION_ID = {{ consultation.id }};
    </script>
  {% endif %}

  <form id="consultForm" class="container my-4" method="post" enctype="multipart/form-data" novalidate>
    <div class="row">
      <!-- Colonne Gauche -->
      <div class="col-lg-6">
        <!-- Détails Médicaux -->
        <div class="card mb-3">
          <div class="card-header">Détails médicaux</div>
          <div class="card-body">
            <div class="mb-3">
              <label for="motifConsultation" class="form-label">Motif</label>
              <textarea id="motifConsultation" name="motifConsultation"
                        class="form-control" rows="2" required>{{ consultation.motifConsultation }}</textarea>
            </div>
            <div class="mb-3">
              <label for="diagnostic" class="form-label">Diagnostic</label>
              <textarea id="diagnostic" name="diagnostic"
                        class="form-control" rows="2" required>{{ consultation.diagnostic }}</textarea>
            </div>
            <div class="mb-3">
              <label for="remarques" class="form-label">Remarques</label>
              <textarea id="remarques" name="remarques"
                        class="form-control" rows="2">{{ consultation.remarques }}</textarea>
            </div>
            <div class="mb-3">
              <label for="phaseTraitement" class="form-label">Phase traitement</label>
              <input type="text" id="phaseTraitement" name="phaseTraitement"
                     class="form-control" placeholder="Ex : Détartrage"
                     value="{{ consultation.phaseTraitement }}">
            </div>
          </div>
        </div>

        <!-- Documents Médicaux -->
        <div class="card mb-3">
          <div class="card-header d-flex justify-content-between">
            <span>Documents médicaux</span>
            <button id="addDoc" class="btn btn-sm btn-outline-primary"><i class="fas fa-plus"></i></button>
          </div>
          <div class="card-body" id="docsContainer">
            
          </div>
        </div>

        <!-- Radiographies -->
        <div class="card mb-3">
          <div class="card-header d-flex justify-content-between">
            <span>Radiographies</span>
            <button id="addRadio" class="btn btn-sm btn-outline-primary"><i class="fas fa-plus"></i></button>
          </div>
          <div class="card-body" id="radiosContainer">
             
          </div>
        </div>
      </div>

      <!-- Colonne Droite -->
      <div class="col-lg-6">
        <!-- Infos de Base -->
        <div class="card mb-3">
          <div class="card-header">Infos de base</div>
          <div class="card-body">
            <div class="mb-3">
              <label for="dateDebut" class="form-label">Date et heure</label>
              <input type="datetime-local" id="dateDebut" name="dateDebut"
                     class="form-control" value="{{ consultation.dateDebut|date('Y-m-d\\TH:i') }}" required>
            </div>
            <div class="mb-3">
              <label for="patient" class="form-label">Patient</label>
              <select id="patient" name="patient" class="form-select" required disabled>
                <option value="{{ consultation.patient.id }}" selected>
                  {{ consultation.patient.nom }} {{ consultation.patient.prenom }}
                </option>
              </select>
            </div>
            <div class="mb-3">
              <label for="medecin" class="form-label">Médecin</label>
              <select id="medecin" name="medecin" class="form-select" required>
                <option value="">– Choisir –</option>
                {% for med in medecins %}
                  <option value="{{ med.id }}" {{ consultation.medecin and med.id == consultation.medecin.id ? 'selected' }}>
                    Dr. {{ med.nom }} {{ med.prenom }}
                  </option>
                {% endfor %}
              </select>
            </div>
            <div class="mb-3">
              <label for="infirmier" class="form-label">Infirmier (opt.)</label>
              <select id="infirmier" name="infirmier" class="form-select">
                <option value="">– Aucun –</option>
                {% for inf in infirmiers %}
                  <option value="{{ inf.id }}" {{ consultation.infirmier and inf.id == consultation.infirmier.id ? 'selected' }}>
                    {{ inf.nom }} {{ inf.prenom }}
                  </option>
                {% endfor %}
              </select>
            </div>
            <div class="mb-3">
              <label for="salle" class="form-label">Salle</label>
              <select id="salle" name="salle" class="form-select" required>
                <option value="">– Choisir –</option>
                {% for salle in salles %}
                  <option value="{{ salle.id }}" {{ consultation.salle and salle.id == consultation.salle.id ? 'selected' }}>
                    {{ salle.nom }}
                  </option>
                {% endfor %}
              </select>
            </div>
            <input type="hidden" name="state" value="{{ consultation.state }}">
          </div>
        </div>

        <!-- Actes Médicaux -->
        <div class="card mb-3">
          <div class="card-header d-flex justify-content-between">
            <span>Actes médicaux</span>
            <button id="addActe" class="btn btn-sm btn-outline-primary"><i class="fas fa-plus"></i></button>
          </div>
          <div class="card-body" id="actesContainer">
            
          </div>
        </div>

        <!-- Ordonnances -->
        <div class="card mb-3">
          <div class="card-header d-flex justify-content-between">
            <span>Ordonnances</span>
            <button id="addOrdo" class="btn btn-sm btn-outline-primary"><i class="fas fa-plus"></i></button>
          </div>
          <div class="card-body" id="ordosContainer">
            
          </div>
        </div>

        <!-- Examens -->
        <div class="card mb-3">
          <div class="card-header d-flex justify-content-between">
            <span>Examens</span>
            <button id="addExam" class="btn btn-sm btn-outline-primary"><i class="fas fa-plus"></i></button>
          </div>
          <div class="card-body" id="examsContainer">
            
          </div>
        </div>
      </div>
    </div>

    <!-- Floating Action Buttons -->
    <div class="floating-buttons">
      <button id="btnCloture" type="button" class="btn btn-success btn-circle shadow" title="Clôturer">
        <i class="fas fa-check"></i>
      </button>
      <button id="btnUpdate" type="button" class="btn btn-primary btn-circle shadow" title="Mettre à jour">
        <i class="fas fa-save"></i>
      </button>
      <a href="javascript:history.back()" class="btn btn-danger btn-circle shadow" title="Retour">
        <i class="fas fa-arrow-left"></i>
      </a>
      <button id="btnShowFacture" type="button" class="btn btn-secondary btn-circle shadow" title="Prévisualiser Facture">
        <i class="fas fa-file-invoice"></i>
      </button>
    </div>
  </form>

  <!-- Modals... (facture, confirmation) inchangés -->
  <div class="modal fade" id="factureModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
      <div class="modal-content">
        <div class="modal-header bg-info text-white">
          <h5 class="modal-title">Prévisualisation Facture</h5>
          <button type="button" id="btnCloseFactureModal" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body"><div id="factureContent"></div></div>
      </div>
    </div>
  </div>
  <div class="modal fade" id="clotureModal" tabindex="-1">
    <div class="modal-dialog"><div class="modal-content">
      <div class="modal-header bg-success text-white"><h5 class="modal-title">Confirmer la clôture</h5></div>
      <div class="modal-body">Êtes-vous sûr de vouloir clore cette consultation ?</div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
        <button id="confirmClotureBtn" type="button" class="btn btn-success">Confirmer</button>
      </div>
    </div></div>
  </div>
  <div class="modal fade" id="updateModal" tabindex="-1">
    <div class="modal-dialog"><div class="modal-content">
      <div class="modal-header bg-primary text-white"><h5 class="modal-title">Confirmer la mise à jour</h5></div>
      <div class="modal-body">Êtes-vous sûr de vouloir mettre à jour cette consultation ?</div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
        <button id="confirmUpdateBtn" type="button" class="btn btn-primary">Confirmer</button>
      </div>
    </div></div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}

  {# --- FilePond JS --- #}
  <script src="https://unpkg.com/filepond/dist/filepond.min.js"></script>

  <script>
  $(function() {
    // Variables Twig
    var lastConsultationId = window.LAST_CONSULTATION_ID;
    var isLinked           = window.IS_LINKED === true || window.IS_LINKED === 'true';
    var consultationId     = window.CONSULTATION_ID;

    // Init toggle & collapse
    if (isLinked && lastConsultationId) {
      $('#linkLast').prop('checked', true);
      $('#lastConsultDetails').addClass('show');
    }

    // Ouvrir modals
    $('#btnCloture').on('click',  ()=>$('#clotureModal').modal('show'));
    $('#btnUpdate') .on('click', ()=>$('#updateModal').modal('show'));

    // Tooltip helper
    function showTooltip(el,msg){
      $(el).attr('data-bs-toggle','tooltip').attr('title',msg).tooltip('show');
      setTimeout(()=>$(el).tooltip('dispose'),3000);
    }

    // Collecte + validation
    function collectAndValidate(){
      var form = $('#consultForm')[0];
      if (!form.checkValidity()){
        var first = $(form).find(':invalid').first();
        first[0].reportValidity();
        $('html,body').animate({scrollTop:first.offset().top-100},400);
        return null;
      }
      var comps = [
        {c:'#actesContainer',  f:'[name$="[nom]"]',     m:'Nom de l’acte requis'},
        {c:'#ordosContainer',  f:'[name$="[contenu]"]', m:'Contenu requis'},
        {c:'#examsContainer',  f:'[name$="[libelle]"]',m:'Libellé requis'},
        {c:'#docsContainer',   f:'[name$="[libelle]"]',m:'Libellé requis'},
        {c:'#radiosContainer', f:'[name$="[type]"]',   m:'Type requis'}
      ];
      var err=null;
      comps.forEach(function(x){
        if (err) return;
        $(x.c).find('.p-3').each(function(){
          var inp = $(this).find(x.f);
          if (inp.length && !inp.val().trim()){ err=inp; showTooltip(inp,x.m); return false; }
        });
      });
      if (err){ $('html,body').animate({scrollTop:err.offset().top-100},400); return null; }
      return {
        motifConsultation: $('#motifConsultation').val().trim(),
        diagnostic:       $('#diagnostic').val().trim(),
        remarques:        $('#remarques').val().trim(),
        phaseTraitement:  $('#phaseTraitement').val().trim(),
        linkLast:         $('#linkLast').is(':checked'),
        lastConsultationId: $('#linkLast').is(':checked') ? lastConsultationId : null
      };
    }

function sendAjax(endpoint) {
  // 1) Validation
  const data = collectAndValidate();
  if (!data) return;

  // 2) On part du form pour tout prendre automatiquement
  const formEl = document.getElementById('consultForm');
  const fd = new FormData(formEl);

  // 2a) On écrase / ajoute nos toggles et champs courts
  Object.entries(data).forEach(([k, v]) => {
    fd.set(k, v);
  });

  // 2b) Ajout manuel des fichiers FilePond
  //    On boucle sur chaque instance et on fixe la clé exactement
  console.log('[JS] Ajout des fichiers FilePond :');
  window.pondDocs.forEach((inst, idx) => {
    const key = `documents[${idx}][fichier]`;
    inst.getFiles().forEach((item, j) => {
      console.log(`  • ${key} ←`, item.file);
      fd.append(key, item.file);
    });
  });
  window.pondRadios.forEach((inst, idx) => {
    const key = `radiographies[${idx}][fichier]`;
    inst.getFiles().forEach((item, j) => {
      console.log(`  • ${key} ←`, item.file);
      fd.append(key, item.file);
    });
  });

  // 2c) Debug : liste complète des clés du FormData
  for (let [k, v] of fd.entries()) {
    console.log('[FormData]', k, v);
  }
 
  // 3) AJAX multipart
  $.ajax({
    url: endpoint.replace('{id}', consultationId),
    method: 'POST',
    data: fd,
    processData: false,
    contentType: false,
  })
  .done(res => {
    showToastModal({ message: res.message, type: res.success ? 'success' : 'error', duration: 3000 });
    if (endpoint.includes('cloture') && res.success) {
      setTimeout(() => window.location.href = '{{ path("consultations_pending") }}', 1000);
    }
  })
  .fail(xhr => {
    const msg = xhr.responseJSON?.message || 'Erreur serveur';
    showToastModal({ message: msg, type: 'error', duration: 3000 });
  });
}



    $('#confirmUpdateBtn').on('click', ()=>{ $('#updateModal').modal('hide'); sendAjax('/api/consultation/{id}/update'); });
    $('#confirmClotureBtn').on('click',()=>{ $('#clotureModal').modal('hide'); sendAjax('/api/consultation/{id}/cloture'); });

    // Scroll last card
    $(window).on('scroll', function(){
      var top = $(this).scrollTop();
      $('.last-consult-card').css('top', top<100 ? '5.5rem' : '1rem');
    });

    // Prévisualisation facture
    var actes = [];
    {% for acte in consultation.actes %}
      actes.push({ description:'{{ acte.description }}', prix:{{ acte.prix }}, quantite:{{ acte.quantite }} });
    {% endfor %}
    $('#btnShowFacture').on('click', function(){
      if (!actes.length) {
        showToastModal({ message:'Aucun acte à facturer.', type:'info' });
        return;
      }
      var total = actes.reduce((s,a)=>s + a.prix*(a.quantite||1), 0);
      var rows = actes.map(a=>
        '<tr><td>'+a.nom+(a.description?'<br><small>'+a.description+'</small>':'')+'</td>'+
        '<td>'+(a.quantite||1)+'</td>'+
        '<td>'+a.prix.toLocaleString('fr-FR')+' FCFA</td>'+
        '<td>'+(a.prix*(a.quantite||1)).toLocaleString('fr-FR')+' FCFA</td></tr>'
      ).join('');
      var dateF = new Date().toLocaleDateString('fr-FR', { day:'2-digit', month:'long', year:'numeric' });
      var invoice = '<div class="facture-container">'+
        '<header class="facture-header">'+
          '<div><img src="https://cdn.pixabay.com/photo/2017/01/08/21/11/medical-1964528_1280.png" class="facture-logo"></div>'+
          '<div class="entreprise-info"><h2>Cabinet Dentaire Orodent</h2><p>123 Avenue des Cliniques, Bamako</p><p>Tél: +223 76 54 32 10 | Email: contact@orodent.ml</p></div>'+
        '</header>'+
        '<div class="client-info d-flex justify-content-between my-3">'+
          '<div><h3>Facture à :</h3><p>{{ consultation.patient.nom }} {{ consultation.patient.prenom }}</p><p>{{ consultation.patient.telephone }}</p></div>'+
          '<div class="facture-meta text-end"><p><strong>N° Facture :</strong> ORO-'+new Date().getFullYear()+'-'+String({{ consultation.id }}).padStart(4,'0')+'</p><p><strong>Date :</strong> '+dateF+'</p></div>'+
        '</div>'+
        '<table class="facture-table w-100"><thead><tr><th>Description</th><th>Qté</th><th>Prix U.</th><th>Total</th></tr></thead><tbody>'+rows+'</tbody><tfoot><tr><th colspan="3">Total TTC</th><th>'+total.toLocaleString('fr-FR')+' FCFA</th></tr></tfoot></table>'+
        '<div class="signature-section d-flex justify-content-between mt-4"><div class="montant-lettres"><em>'+nombreEnLettres(total)+'</em></div><div class="cachet-space">Cachet</div></div>'+
        '<footer class="facture-footer text-center mt-4"><p>Banque : BDM SA – RIB 007 00000 12345678901 72</p><p>RCCM ML2024BKO001 | NIF 2024A12345</p><p class="small">À régler sous 15 jours</p></footer>'+
      '</div>';
      $('#factureContent').html(invoice);
      $('#factureModal').modal('show');
    });

    function nombreEnLettres(n){
      var u=['','un','deux','trois','quatre','cinq','six','sept','huit','neuf'];
      var d=['','dix','vingt','trente','quarante','cinquante','soixante','soixante-dix','quatre-vingt','quatre-vingt-dix'];
      return n>0? (d[Math.floor(n/10)]+' '+u[n%10]).trim()+' Francs CFA':'Zéro Franc CFA';
    }

    // Dynamic fields add/remove
    var cnt = {
      acte: {{ consultation.actes|length }},
      ordo: {{ consultation.ordonnances|length }},
      exam: {{ consultation.examens|length }},
      doc:  {{ consultation.documents|length }},
      radio:{{ consultation.radiographies|length }}
    };
    function makeCard(html){ return '<div class="mb-3 p-3 border rounded">'+html+'<div class="mt-2 text-end"><button class="btn btn-outline-danger btn-sm remove-btn"><i class="fas fa-trash"></i></button></div></div>'; }

    $('#addActe').on('click', function(e){
      e.preventDefault();
      var i = cnt.acte++;
      $('#actesContainer').append(makeCard(
        '<div class="mb-2"><input name="actes['+i+'][nom]" class="form-control" placeholder="Nom"></div>'+
        '<div class="mb-2"><input name="actes['+i+'][type]" class="form-control" placeholder="Type"></div>'+
        '<div class="mb-2"><input name="actes['+i+'][dent]" class="form-control" placeholder="Dent"></div>'+
        '<div class="mb-2"><input name="actes['+i+'][description]" class="form-control" placeholder="Description"></div>'+
        '<div class="mb-2"><input name="actes['+i+'][prix]" type="number" class="form-control" placeholder="Prix"></div>'+
        '<div class="mb-2"><input name="actes['+i+'][quantite]" type="number" class="form-control" placeholder="Qté"></div>'+
        '<div class="mb-2"><input name="actes['+i+'][phaseTraitement]" class="form-control" placeholder="Phase"></div>'
      ));
    });
    $('#addOrdo').on('click', function(e){
      e.preventDefault();
      var i = cnt.ordo++;
      $('#ordosContainer').append(makeCard(
        '<div class="mb-2"><input name="ordonnances['+i+'][contenu]" class="form-control" placeholder="Contenu"></div>'+
        '<div class="mb-2"><input name="ordonnances['+i+'][date]" type="date" class="form-control"></div>'
      ));
    });
    $('#addExam').on('click', function(e){
      e.preventDefault();
      var i = cnt.exam++;
      $('#examsContainer').append(makeCard(
        '<div class="mb-2"><input name="examens['+i+'][libelle]" class="form-control" placeholder="Libellé"></div>'+
        '<div class="mb-2"><input name="examens['+i+'][resultat]" class="form-control" placeholder="Résultat"></div>'
      ));
    });
    $('#addDoc').on('click', function(e){
      e.preventDefault();
      var i = cnt.doc++;
      $('#docsContainer').append(makeCard(
        '<div class="mb-2"><input name="documents['+i+'][libelle]" class="form-control" placeholder="Libellé"></div>'+
        '<div class="mb-2"><input name="documents['+i+'][dateDossier]" type="date" class="form-control"></div>'+
        '<div class="mb-2"><input name="documents['+i+'][validite]" type="date" class="form-control"></div>'+
        '<div class="mb-2"><input name="documents['+i+'][fichier]" type="file" class=" filepond"></div>'
      ));
      // instantiate FilePond on the new input
      window.pondDocs.push(FilePond.create($('#docsContainer').find('input[name="documents['+i+'][fichier]"]')[0], filePondOptions));
    });
    $('#addRadio').on('click', function(e){
      e.preventDefault();
      var i = cnt.radio++;
      $('#radiosContainer').append(makeCard(
        '<div class="mb-2"><input name="radiographies['+i+'][type]" class="form-control" placeholder="Type"></div>'+
        '<div class="mb-2"><input name="radiographies['+i+'][commentaire]" class="form-control" placeholder="Commentaire"></div>'+
        '<div class="mb-2"><input name="radiographies['+i+'][fichier]" type="file" class="filepond"></div>'
      ));
      window.pondRadios.push(FilePond.create($('#radiosContainer').find('input[name="radiographies['+i+'][fichier]"]')[0], filePondOptions));
    });
    $(document).on('click','.remove-btn', function(){
    const input = $(this).closest('.p-3').find('input.filepond')[0];
    if (input) {
      if ($(this).closest('#docsContainer').length) {
        window.pondDocs = window.pondDocs.filter(inst => inst.element !== input);
      } else if ($(this).closest('#radiosContainer').length) {
        window.pondRadios = window.pondRadios.filter(inst => inst.element !== input);
      }
      FilePond.destroy(input);
    }

      $(this).closest('.p-3').remove();
    });

    // Lier motif/diagnostic
    $('#linkLast').on('change', function(){
      if ($(this).is(':checked')){
        $('#motifConsultation').val($('#lastMotif').text());
        $('#diagnostic').val($('#lastDiagnostic').text());
      }
    });

    // --- FilePond integration ---
    const filePondOptions = {
      labelIdle: 'Glissez-déposez vos fichiers ou <span class="filepond--label-action">Parcourir</span>',
      allowMultiple: false,
      server: {
        process: (fieldName, file, metadata, load, error, progress, abort) => {
          const total = file.size;
          let loaded = 0;
          const chunk = total / 20;
          const id = setInterval(() => {
            loaded = Math.min(loaded + chunk, total);
            progress(loaded, total);
            if (loaded >= total) {
              clearInterval(id);
              load(Date.now().toString());
            }
          }, 100);
          return { abort: () => { clearInterval(id); abort(); } };
        },
        revert: (uniqueId, load) => { console.log('Revert', uniqueId); load(); }
      }
    };

    const pondDocs = [];
  document
    .querySelectorAll('input[name^="documents"][name$="[fichier]"]')
    .forEach(input => {
      const fp = FilePond.create(input, filePondOptions);
      pondDocs.push(fp);
    });

  // Radiographies
  const pondRadios = [];
  document
    .querySelectorAll('input[name^="radiographies"][name$="[fichier]"]')
    .forEach(input => {
      const fp = FilePond.create(input, filePondOptions);
      pondRadios.push(fp);
    });

  // Exposez-les pour votre sendAjax()
  window.pondDocs   = pondDocs;
  window.pondRadios = pondRadios;

  });
  </script>

    <script>
  $(function(){
    const id = {{ consultation.id }};
    const urlJson = '{{ path("api_consultation_json",{"id":consultation.id}) }}';

    // Options FilePond (comme défini précédemment)
    const filePondOptions = { /* … */ };

    // Helpers pour créer un bloc
      function makeCard(html){ return '<div class="mb-3 p-3 border rounded">'+html+'<div class="mt-2 text-end"><button class="btn btn-outline-danger btn-sm remove-btn"><i class="fas fa-trash"></i></button></div></div>'; }

    function renderActes(actes){
      $('#actesContainer').empty();
      actes.forEach((a,i)=>{
        const html = `
          <div class="mb-2"><input name="actes[${i}][nom]"          class="form-control" placeholder="Nom"          value=""></div>
          <div class="mb-2"><input name="actes[${i}][type]"         class="form-control" placeholder="Type"         value="${a.type}"></div>
          <div class="mb-2"><input name="actes[${i}][dent]"         class="form-control" placeholder="Dent"         value="${a.dent}"></div>
          <div class="mb-2"><input name="actes[${i}][description]"  class="form-control" placeholder="Description"  value="${a.description}"></div>
          <div class="mb-2"><input name="actes[${i}][prix]" type="number" class="form-control" placeholder="Prix"  value="${a.prix}"></div>
          <div class="mb-2"><input name="actes[${i}][quantite]" type="number" class="form-control" placeholder="Qté" value="${a.quantite}"></div>
          <div class="mb-2"><input name="actes[${i}][phaseTraitement]" class="form-control" placeholder="Phase" value="${a.phaseTraitement}"></div>`;
        $('#actesContainer').append(makeCard(html));
      });
    }

    function renderOrdonnances(ordos){
      $('#ordosContainer').empty();
      ordos.forEach((o,i)=>{
        const html = `
          <div class="mb-2"><input name="ordonnances[${i}][contenu]" class="form-control" placeholder="Contenu" value="${o.contenu}"></div>
          <div class="mb-2"><input name="ordonnances[${i}][date]"    type="date" class="form-control" value="${o.date}"></div>`;
        $('#ordosContainer').append(makeCard(html));
      });
    }

    function renderExamens(exams){
      $('#examsContainer').empty();
      exams.forEach((e,i)=>{
        const html = `
          <div class="mb-2"><input name="examens[${i}][libelle]"  class="form-control" placeholder="Libellé" value="${e.libelle}"></div>
          <div class="mb-2"><input name="examens[${i}][resultat]" class="form-control" placeholder="Résultat" value="${e.resultat}"></div>`;
        $('#examsContainer').append(makeCard(html));
      });
    }

    function renderDocuments(docs){
      $('#docsContainer').empty();
      docs.forEach((d,i)=>{
        const html = `
          <div class="mb-2"><input name="documents[${i}][libelle]"   class="form-control" placeholder="Libellé" value="${d.libelle}"></div>
          <div class="mb-2"><input name="documents[${i}][dateDossier]" type="date" class="form-control" value="${d.dateDossier}"></div>
          <div class="mb-2"><input name="documents[${i}][validite]"    type="date" class="form-control" value="${d.validite}"></div>
          <div class="mb-2"><input name="documents[${i}][fichier]"     type="file" class="filepond"></div>`;
        $('#docsContainer').append(makeCard(html));
      });
    }

    function renderRadiographies(radios){
      $('#radiosContainer').empty();
      radios.forEach((r,i)=>{
        const html = `
          <div class="mb-2"><input name="radiographies[${i}][type]"        class="form-control" placeholder="Type" value="${r.type}"></div>
          <div class="mb-2"><input name="radiographies[${i}][commentaire]" class="form-control" placeholder="Commentaire" value="${r.commentaire}"></div>
          <div class="mb-2"><input name="radiographies[${i}][fichier]"     type="file" class="filepond"></div>`;
        $('#radiosContainer').append(makeCard(html));
      });
    }

    // 4) Chargement AJAX
    $.getJSON(urlJson, function(res){
      if (!res.success) {
        return showToastModal({ message: res.message, type:'error' });
      }

      // → Simples
      $('#dateDebut').val(res.dateDebut);
      $('#motifConsultation').val(res.motifConsultation);
      $('#diagnostic').val(res.diagnostic);
      $('#remarques').val(res.remarques);
      $('#phaseTraitement').val(res.phaseTraitement);
      $('#medecin').val(res.medecin);
      $('#infirmier').val(res.infirmier);
      $('#salle').val(res.salle);
      if (res.consultationLiee) {
        $('#linkLast').prop('checked', true);
        $('#lastConsultDetails').addClass('show');
      }

      // → Composés
      renderActes(res.actes);
      renderOrdonnances(res.ordonnances);
      renderExamens(res.examens);
      renderDocuments(res.documents);
      renderRadiographies(res.radiographies);

     document
    .querySelectorAll('input[name^="documents"][name$="[fichier]"]')
    .forEach(input => {
        const fp = FilePond.create(input, filePondOptions);
        window.pondDocs.push(fp);
    });

    document
    .querySelectorAll('input[name^="radiographies"][name$="[fichier]"]')
    .forEach(input => {
        const fp = FilePond.create(input, filePondOptions);
        window.pondRadios.push(fp);
    });

      
    });
  });
  </script>
{% endblock %}
